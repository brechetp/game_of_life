--
-- SimpleRegister4Zynq - This file is part of SimpleRegister4Zynq
-- Copyright (C) 2015 - Telecom ParisTech
--
-- This file must be used under the terms of the CeCILL.
-- This source file is licensed as described in the file COPYING, which
-- you should have received as part of this distribution.  The terms
-- are also available at
-- http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
--

library ieee;
use ieee.std_logic_1164.all;

library global_lib;
use global_lib.numeric_std.all;
use global_lib.utils.all;

library axi_lib;
use axi_lib.axi_pkg.all;

entity adr_ctrl is
   port(
	aclk:		in std_ulogic;		-- Clock
	aresetn:	in std_ulogic;		-- Reset
   )
end entity adr_ctrl;

architecture adr_ctr of adr_ctrl is

	signal s_axi_m2s: 	axilite_gp_m2s;
	signal s_axi_s2m: 	axilite_gp_s2m;
	signal height: 		std_ulogic_vector(15 downto 0);
	signal width: 		std_ulogic_vector(15 downto 0);
	signal start: 		std_ulogic;
    	signal color: 		std_ulogic_vector(31 downto 0);

begin

	i_axi_register: entity work.axi_register
	port map(
		aclk       => aclk,
		aresetn    => aresetn,
		s_axi_m2s => s_axi_m2s,
		s_axi_s2m => s_axi_s2m,
		gpi        => gpi_local,
		gpo        => gpo_local
	);
	i_axi_register_master: entity work.axi_register_master
	port map(
		aclk       => aclk,
		aresetn    => aresetn,
		s_axi_m2s => s_axi_m2s,
		s_axi_s2m => s_axi_s2m,
		gpi        => gpi_local,
		gpo        => gpo_local
	);

